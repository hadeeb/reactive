{"version":3,"sources":["webpack:///../docs/observe.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,8BACE,iBAAGC,WAAW,cAAd,8CAEF,iBAAQ,CACN,GAAM,iBADR,iBAGA,0EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mVAkBL,iBAAQ,CACN,GAAM,YADR,YAGA,mDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kMAWL,iBAAQ,CACN,GAAM,WADR,WAGA,0GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sPAaL,iBAAQ,CACN,GAAM,oBADR,qBAGA,gDAA+B,0BAAYA,WAAW,KAAvB,WAA/B,SAA4F,0BAAYA,WAAW,KAAvB,cAA5F,mGACwE,0BAAYA,WAAW,KAAvB,cADxE,UACyI,0BAAYA,WAAW,KAAvB,qBADzI,OAC8M,0BAAYA,WAAW,KAAvB,WAD9M,KAEA,qBAAG,0BAAYA,WAAW,KAAvB,WAAH,oDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0FAOL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+aA0BL,iBAAQ,CACN,GAAM,YADR,YAGA,2DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0TAgBL,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,YAAnB,oCACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,wEAQvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,YAAnB,4BAAoG,0BAAYA,WAAW,KAAvB,UAApG,KACA,iBAAGA,WAAW,MAAd,eAAmC,0BAAYA,WAAW,KAAvB,KAAnC,yDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,YAAnB,SAAiF,0BAAYA,WAAW,KAAvB,eAAjF,uBAAgK,0BAAYA,WAAW,KAAvB,gBAAhK,KACA,iBAAGA,WAAW,MAAd,iBAAqC,0BAAYA,WAAW,KAAvB,eAArC,SAAsG,0BAAYA,WAAW,KAAvB,YAAtG,Q,yLAORJ,EAAWK,gBAAiB","file":"component---docs-observe-mdx-87144a88c5076d054f29.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Hadeeb/Documents/js/react/reactive/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <blockquote>\n      <p parentName=\"blockquote\">{`Connect your React apps to reactive store`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"storeprovider\"\n    }}>{`StoreProvider`}</h2>\n    <p>{`Make the store accessible to the rest of the app.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { StoreProvider } from \"@hadeeb/reactive\";\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  rootElement\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usestore\"\n    }}>{`useStore`}</h2>\n    <p>{`Read store from components`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from \"react\";\nimport { useStore } from \"@hadeeb/reactive\";\n\nfunction CounterDisplay() {\n  const [state, dispatch] = useStore();\n\n  return <span>{state.count}</span>;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"observe\"\n    }}>{`observe`}</h2>\n    <p>{`Wrap your function components to track usage of state and rerender when necessary`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from \"react\";\nimport { useStore, observe } from \"@hadeeb/reactive\";\n\nfunction CounterDisplay() {\n  const [state, dispatch] = useStore();\n\n  return <span>{state.count}</span>;\n}\n\nexport default observe(CounterDisplay);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"forwardref--memo\"\n    }}>{`forwardRef & memo`}</h3>\n    <p>{`Components wrapped with `}<inlineCode parentName=\"p\">{`observe`}</inlineCode>{` have `}<inlineCode parentName=\"p\">{`React.memo`}</inlineCode>{` applied by default.\nIf the component to observe is also supposed to forward refs, don't apply `}<inlineCode parentName=\"p\">{`forwardRef`}</inlineCode>{`, pass `}<inlineCode parentName=\"p\">{`forwardRef : true`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`observe`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`observe`}</inlineCode>{` take an optional second argument with the shape`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  forwardRef?:boolean; // default = false\n  memo?:boolean; // default = true\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from \"react\";\nimport { useStore, observe } from \"@hadeeb/reactive\";\n\nfunction Counter(props, ref) {\n  const [, dispatch] = useStore();\n\n  function onClick() {\n    dispatch(\"INCREMENT\");\n  }\n\n  return (\n    <div>\n      <span>{state.count}</span>\n      <button ref={ref} onClick={onClick}>\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default observe(Counter, {\n  forwardRef: true\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"decorate\"\n    }}>{`decorate`}</h2>\n    <p>{`Access store from class components`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from \"react\";\nimport { decorate } from \"@hadeeb/reactive\";\n\nclass CounterDisplay extends React.Component {\n  render() {\n    const store = this.context;\n    const state = store.getState();\n\n    return return <span>{state.count}</span>;\n  }\n}\n\nexport default decorate(CounterDisplay);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`decorate`}</inlineCode>{` can also be used as a decorator`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`@decorate\nclass MyComponent extends React.Component {\n  ...\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`decorate`}</inlineCode>{` stores tracking data in `}<inlineCode parentName=\"p\">{`this.$`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`Avoid using `}<inlineCode parentName=\"p\">{`$`}</inlineCode>{` as instance variable/method in decorated components`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`decorate`}</inlineCode>{` uses `}<inlineCode parentName=\"p\">{`contextType`}</inlineCode>{` to inject store to `}<inlineCode parentName=\"p\">{`this.context`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`You can't use `}<inlineCode parentName=\"p\">{`contextType`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`decorate`}</inlineCode>{`.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}